/*
 * File:   AddOnBoards.h
 * Author: vschilli
 *
 * Created on 15. November 2013, 10:07
 */

#ifndef ADDONBOARDS_H
#define ADDONBOARDS_H

#include "uCQuick/uCQ_2018.h"

union DemoFlags{
    char all;

    struct {
        unsigned LN : 4;
        unsigned HN : 4;
    };

    struct {
        unsigned encUp      : 1;
        unsigned encDown    : 1;
        unsigned newADC     : 1;
        unsigned newCapture : 1;
        unsigned newSec     : 1;
        unsigned newSRF     : 1;
        unsigned start      : 1;
        unsigned bit7 : 1;
    };
};
extern union DemoFlags flags;

//###### select the add-on board under test ####################################
//please select the following boards via project configuration
//  ADDON_ENC_CIRCLE (8-LED-circle board is needed)
//  ADDON_MPU6000
//  ADDON_ACC_CIRCLE (MPU6000 and 8-LED-circle board are needed)
//  ADDON_GPS_NMEA
//  ...
#ifdef OTHERS
  not tested yet ERROR ;-)
#endif

void testEncCircle(void);   // rotate 8 LEDs in a circle using the encoder
void testSRF0X(void);       // display SRF04 or SRF05 US sensor measures on GLCD
void testMPU6000(void);     // display ACC values of a MPU6000 on GLCD
void testAccCircle(void);   // MPU6000 ACC values aand LED circle -> water level
void testGPS_NMEA(void);    // decode NMEA (GPS) protocol -> GLCD
void testDS18B20(void);     // oneWire temperature sensor -> GLCD
void testNeopixel_24(void); // control WS2812 RGB LEDs
void testAPA102(void);      // control APA102 RGB LEDs
void testRGB_LED(void);     // common Cathode or Anode RGB demo (encoder/GLCD)
void testDCF77(void);       // receive a DCF77 time signal -> GLCD
void testSHT21(void);       // i2c temperature sensor -> GLCD
void testIRC_NEC(void);     // IR (not yet done)
void testBMP280(void);      // barometric pressure sensor not yet done()

//##############################################################################

#if defined(ADDON_ENC_CIRCLE)
    #define TEST_ADDON() testEncCircle()
    #define _XTAL_FREQ  1000000
    #include "LCD/GLCDnokia.h"
    #define USE_LED_CIRCLE


#elif defined(ADDON_SRF05)||defined(ADDON_SRF04)
    #define TEST_ADDON() testSRF0X()
    #define _XTAL_FREQ  4000000
    #include "LCD/GLCDnokia.h"
    #include "PLIB/plib18fxxk22.h"

    extern unsigned short timeSRF;

    #define SRF_TMR_IR          PIE1bits.TMR1IE && PIR1bits.TMR1IF
    #define mSRF_TMR_IR_EN()    PIE1bits.TMR1IE = 1
    #define mSRF_TMR_IR_DIS()   PIE1bits.TMR1IE = 0
    #define mSRF_TMR_IR_CLR()   PIR1bits.TMR1IF = 0
    #define SRF_IR              PIE1bits.CCP1IE && PIR1bits.CCP1IF
    #define mSRF_IR_EN()        PIE1bits.CCP1IE = 1
    #define mSRF_IR_DIS()       PIE1bits.CCP1IE = 0
    #define mSRF_IR_CLR()       PIR1bits.CCP1IF = 0

    #define SRF05_SIG           PORTCbits.RC2
    #define SRF05_ANS           ANSELCbits.ANSC2
    #define SRF05_TRIG          LATCbits.LATC2
    #define SRF05_TRI           TRISCbits.TRISC2
    #define SRF04_SIG           PORTCbits.RC2
    #define SRF04_SIG_TRI       TRISCbits.TRISC2
    #define SRF04_TRIG          LATCbits.LATC6
    #define SRF04_TRIG_TRI      TRISCbits.TRISC6
    #define SRF04_SIG_ANS       ANSELCbits.ANSC2

    // SRF05 trigger is generated by switching I/O
    #if defined(ADDON_SRF05)
        #define mINIT_SRFPIN()  SRF05_TRIG = 1; SRF05_TRI = INPUT_PIN;  \
                                SRF05_ANS = DIGITAL_PIN
        #define mSRF_TRIGGER()  SRF05_TRI = 0; __delay_us(10); SRF05_TRI = 1
    #elif defined(ADDON_SRF04)
        #define mINIT_SRFPIN()  SRF04_TRIG_TRI = OUTPUT_PIN;    \
                                SRF04_SIG_TRI = INPUT_PIN;      \
                                SRF04_SIG_ANS = DIGITAL_PIN
        #define mSRF_TRIGGER()  SRF04_TRIG = 1; __delay_us(10); SRF04_TRIG = 0
    #endif

    #define CAPTURE_MODULE_OFF      0x00
    #define CAPTURE_FALLING_EDGE    0x04
    #define CAPTURE_RISING_EDGE     0x05


#elif defined(ADDON_MPU6000)
    #define TEST_ADDON() testMPU6000()
    #define _XTAL_FREQ  1000000
    #include "IMU/MPU6000.h"
    #include "LCD/GLCDnokia.h"


#elif defined(ADDON_ACC_CIRCLE)
    #define TEST_ADDON() testAccCircle()
    #define _XTAL_FREQ  8000000
    #include "IMU/MPU6000.h"
    #include <math.h>
    #define USE_LED_CIRCLE


#elif defined(ADDON_GPS_NMEA)
    #define TEST_ADDON() testGPS_NMEA()
    #define _XTAL_FREQ  64000000
//    #define BAUDRATE    9600
    #define BAUDRATE    115200
    #include "GPS/gpsNMEA.h"
    #include "LCD/GLCDnokia.h"
    #include "PLIB/plib18fxxk22.h"


#elif defined (ADDON_BMP280)
    #define TEST_ADDON() testBMP280()
    #define _XTAL_FREQ  1000000
    #include "Pressure/BMP280.h"
    #include "LCD/GLCDnokia.h"


#elif defined (ADDON_DS18B20)
    #define TEST_ADDON() testDS18B20()
    #define _XTAL_FREQ  4000000
    #include "Temp/DS18x20.h"
    #include "LCD/GLCDnokia.h"


#elif defined (ADDON_NEOPIXEL_24)
    #define TEST_ADDON() testNeopixel_24()
    #define _XTAL_FREQ  16000000
    #include "LCD/GLCDnokia.h"
    #include "rgbLED/WS2812.h"
    #include <stdint.h>

    #define WS2812_DAT LATCbits.LATC5
    #define WS2812_TRI TRISCbits.TRISC5
    #define WS2812_ANS ANSELCbits.ANSC5

    #if _XTAL_FREQ == 64000000
        #define D0H()  Nop();Nop();Nop()
        #define D0L()  Nop();Nop();Nop();Nop()
        #define D1H()  Nop();Nop();Nop();Nop();Nop();Nop();Nop();Nop()
        #define D1L()  Nop();Nop();Nop()
    #elif _XTAL_FREQ == 32000000
        #define D0H()  Nop()
        #define D0L()  Nop();Nop()
        #define D1H()  Nop();Nop();Nop();Nop()
        #define D1L()  Nop()
    #elif _XTAL_FREQ == 16000000
        #define D0H()
        #define D0L()
        #define D1H()   Nop();Nop()
        #define D1L()   Nop()
    #endif

#elif defined (ADDON_APA102)
    #define TEST_ADDON() testAPA102()
    #define _XTAL_FREQ  16000000
    #include "LCD/GLCDnokia.h"
    #include "rgbLED/APA102.h"
    #include <stdint.h>

    #define APA102_D_PIN    LATCbits.LATC5
    #define APA102_D_TRI    TRISCbits.TRISC5
    #define APA102_D_ANS    ANSELCbits.ANSC5
    #define APA102_C_PIN    LATCbits.LATC3
    #define APA102_C_TRI    TRISCbits.TRISC3
    #define APA102_C_ANS    ANSELCbits.ANSC3


#elif defined (ADDON_RGB_LED)
    #define TEST_ADDON() testRGB_LED()
    #define _XTAL_FREQ  16000000
    #include "LCD/GLCDnokia.h"
    #include "PLIB/plib18fxxk22.h"
    #include <stdbool.h>

    extern signed char rgbMenu;
    extern unsigned char rgbFrequency, dutyR, dutyG, dutyB;
    extern unsigned short rgbTime, startG, startB, endRGB;
    extern __bit rgbSeq, rgbExp;

// RGB_CC
    #define rgbLED_ON   1
    #define rgbLED_OFF  0
// RGB_CA
//    #define rgbLED_ON   0
//    #define rgbLED_OFF  1

    #define LED_R_VAL LATCbits.LATC6
    #define LED_R_TRI TRISCbits.TRISC6
    #define LED_R_ANS ANSELCbits.ANSC6
    #define LED_G_VAL LATCbits.LATC7
    #define LED_G_TRI TRISCbits.TRISC7
    #define LED_G_ANS ANSELCbits.ANSC7
    #define LED_B_VAL LATCbits.LATC2
    #define LED_B_TRI TRISCbits.TRISC2
    #define LED_B_ANS ANSELCbits.ANSC2

    #define RGB_TMR_IR          PIE4bits.CCP3IE && PIR4bits.CCP3IF
    #define mRGB_TMR_IR_EN()    PIE4bits.CCP3IE = 1
    #define mRGB_TMR_IR_DIS()   PIE4bits.CCP3IE = 0
    #define mRGB_TMR_IR_CLR()   PIR4bits.CCP3IF = 0


#elif defined (ADDON_DCF77)
    #define TEST_ADDON() testDCF77()
    #define _XTAL_FREQ  500000
    #include "LCD/GLCDnokia.h"
    #include "PLIB/plib18fxxk22.h"

    #warning "############################################################"
    #warning "SIGNAL is connected to PORT_C_2 - remove jumper JP11 please!
    #warning "############################################################"

    #define MAX_SYNC    31563   // 2020ms *(500kHz/4/8)
    #define MIN_SYNC    30938   // 1980ms
    #define MAX_PERIOD  15938   // 1020ms
    #define MIN_PERIOD  15313   //  980ms
    #define MAX_1        3906   //  250ms
    #define MIN_1        2813   //  180ms
//    #define MAX_0        2421   //  155ms
    #define MAX_0        2344   //  150ms
    #define MIN_0        1250   //   80ms

    #define ERROR_NONE()    GLCD_Text2Out(1,0,"OK")
    #define ERROR_SYNC()    GLCD_Text2Out(1,0,"ES")
    #define ERROR_PERIOD()  GLCD_Text2Out(1,0,"EP")
    #define ERROR_DUTY()    GLCD_Text2Out(1,0,"ED")

#elif defined (ADDON_SHT21)
    #define TEST_ADDON() testSHT21()
    #define _XTAL_FREQ  16000000
    #include "TempHum/SHT21.h"
    #include "LCD/GLCDnokia.h"


#elif defined (ADDON_IRC_NEC)
    #define TEST_ADDON() testIRC_NEC()
    #define _XTAL_FREQ  16000000
    #include "ircDecoder/ircNEC.h"
    #include "LCD/GLCDnokia.h"

#endif  // board selection


// -----------------------------------------------------------------------------
#if defined(USE_LED_CIRCLE)
    #define LED_N   LATBbits.LATB4
    #define LED_NO  LATBbits.LATB3
    #define LED_O   LATBbits.LATB2
    #define LED_SO  LATCbits.LATC1
    #define LED_S   LATCbits.LATC0
    #define LED_SW  LATAbits.LATA4
    #define LED_W   LATAbits.LATA5
    #define LED_NW  LATBbits.LATB5
    #define setC_LEDs() LATB |= 0b00111100; LATC |= 0b00000011; LATA |= 0b00110000
    #define clrC_LEDs() LATB &= 0b11000011; LATC &= 0b11111100; LATA &= 0b11001111
    #define initC_LEDs()    clrC_LEDs(); TRISB &= 0b11000011; \
                            TRISC &= 0b11111100; TRISA &= 0b11001111
#endif //defined(USE_LED_CIRCLE)


#endif	/* ADDONBOARDS_H */


//extern void TestRadar(void);
//extern void TestEEi2c(void); //define _XTAL_FREQ  16000000
//    TestRadar(); ???
//    TestMemI2C(); TODO
//    TestMemSPI(); TODO
//    testSRF10()); TODO
